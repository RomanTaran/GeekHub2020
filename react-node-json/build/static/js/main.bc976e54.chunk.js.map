{"version":3,"sources":["components/TodoTextInput.js","components/Header.js","components/TodoFilters.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","components/MainSection.js","components/ErrorComponent.js","components/App.js","index.js"],"names":["TodoTextInput","Component","state","text","this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","render","className","classnames","edit","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Header","addTodo","length","FILTER_TITLES","Footer","visibilityFilter","activeCount","completedCount","setFilter","clearCompleted","itemWord","Object","keys","map","filter","key","selected","style","cursor","onClick","TodoItem","handleDoubleClick","handleSave","todo","deleteTodo","_id","editTodo","toggleTodo","element","checked","completed","onDoubleClick","id","TodoList","todos","MainSection","toggleAllTodo","useState","todosCount","visibleTodos","t","Error","readOnly","ErrorComponent","textAlign","fontSize","App","setTodos","hasError","setError","useEffect","fetchTodos","fetch","mode","headers","then","response","ok","json","data","Math","random","method","body","JSON","stringify","item","areAllMarked","every","document","getElementById"],"mappings":"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","file":"static/js/main.bc976e54.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  };\n\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  handleSubmit = e => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: \"\" });\n      }\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classnames({\n          edit: this.props.editing,\n          \"new-todo\": this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoTextInput from './TodoTextInput'\n\nconst Header = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n)\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default Header","export const SHOW_ALL = \"show_all\";\nexport const SHOW_COMPLETED = \"show_completed\";\nexport const SHOW_ACTIVE = \"show_active\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from \"./TodoFilters\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\"\n};\n\nconst Footer = ({\n  visibilityFilter,\n  activeCount,\n  completedCount,\n  setFilter,\n  clearCompleted\n}) => {\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter => (\n          <li key={filter}>\n            {/* eslint-disable jsx-a11y/anchor-is-valid */}\n            <a\n              className={classnames({ selected: filter === visibilityFilter })}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => setFilter(filter)}\n            >\n              {FILTER_TITLES[filter]}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={clearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  visibilityFilter: PropTypes.string.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    toggleTodo: PropTypes.func.isRequired\n  };\n\n  state = {\n    editing: false\n  };\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true });\n  };\n\n  handleSave = (todo, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(todo._id);\n    } else {\n      this.props.editTodo(todo, text);\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const {todo, toggleTodo, deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={text => this.handleSave(todo, text)}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => toggleTodo(todo._id)}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo._id)} />\n        </div>\n      );\n    }\n\n    return (\n      <li\n        key={classnames({id:todo._id})}\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ todos, editTodo, deleteTodo, toggleTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        editTodo={editTodo}\n        toggleTodo={toggleTodo}\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport TodoList from \"./TodoList\";\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from \"./TodoFilters\";\n\nconst MainSection = ({\n  todos,\n  deleteTodo,\n  editTodo,\n  toggleTodo,\n  toggleAllTodo,\n  clearCompleted\n}) => {\n  const [visibilityFilter, setFilter] = useState(SHOW_ALL);\n\n  const todosCount = todos.length;\n  const completedCount = todos.filter(({ completed }) => completed).length;\n  let visibleTodos;\n  switch (visibilityFilter) {\n    case SHOW_ALL:\n      visibleTodos = todos;\n      break;\n    case SHOW_COMPLETED:\n      visibleTodos = todos.filter(t => t.completed);\n      break;\n    case SHOW_ACTIVE:\n      visibleTodos = todos.filter(t => !t.completed);\n      break;\n    default:\n      throw new Error(\"Unknown filter: \" + visibilityFilter);\n  }\n\n  return (\n    <section className=\"main\">\n      {!!todosCount && (\n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={toggleAllTodo} />\n        </span>\n      )}\n      <TodoList\n        todos={visibleTodos}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        toggleTodo={toggleTodo}\n      />\n      {!!todosCount && (\n        <Footer\n          visibilityFilter={visibilityFilter}\n          setFilter={setFilter}\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          clearCompleted={clearCompleted}\n        />\n      )}\n    </section>\n  );\n};\n\nMainSection.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  toggleAllTodo: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired\n};\n\nexport default MainSection;\n","import React from \"react\";\n\nconst ErrorComponent = () => {\n  return <div style={{textAlign: \"center\", fontSize: \"16px\"}}><h2>Error of reading or writing file on server</h2></div>\n}\n\nexport default ErrorComponent;","import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport MainSection from \"./MainSection\";\nimport ErrorComponent from \"./ErrorComponent\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [hasError, setError] = useState(false)\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    fetch('/api', {\n      mode: \"no-cors\", headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer: token',\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          setError(true);\n        } else {\n          return response.json();\n        }\n      })\n      .then(data => setTodos(data))\n  }\n  const addTodo = text => {\n    const data = {\n      _id: Math.random(),\n      text: text,\n      completed: false\n    }\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer: token',\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => {\n        if (!response.ok) {\n          setError(true);\n        } else {\n          return response.json();\n        }\n      })\n      .then(data =>\n        setTodos([...todos, data]));\n  };\n\n  const deleteTodo = id => {\n    fetch(`/api/todo/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer: token',\n      },\n      body: JSON.stringify({id})\n    }).then(response => {\n      if (!response.ok) {\n        setError(true);\n      } else {\n        return response.json();\n      }\n    })\n      .then(() => {\n        fetchTodos();\n        setTodos(todos);\n      });\n  };\n\n  const editTodo = (todo, text) => {\n    const data = {\n      text: text,\n      _id: todo._id,\n      completed: todo.completed\n    }\n    fetch(`/api/todo/${todo._id}`, {\n      method: \"PUT\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer: token',\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (!response.ok) {\n        setError(true);\n      } else {\n        return response.json();\n      }\n    })\n      .then((data) => {\n        setTodos(todos.map(item => item._id === data._id ? data : item));\n      });\n  };\n\n  const toggleTodo = id => {\n    setTodos(\n      todos.map(\n        todo =>\n          todo._id === id ? {...todo, completed: !todo.completed} : todo\n      )\n    );\n  };\n\n  const toggleAllTodo = () => {\n    const areAllMarked = todos.every(todo => todo.completed);\n    setTodos(\n      todos.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n    );\n  };\n\n  const clearCompleted = () => {\n    setTodos(todos.filter(todo => todo.completed === false));\n  }\n\n  return (\n    <div>\n      {!hasError && (\n        <>\n          <Header addTodo={addTodo}/>\n          <MainSection\n            todos={todos}\n            deleteTodo={deleteTodo}\n            editTodo={editTodo}\n            toggleTodo={toggleTodo}\n            toggleAllTodo={toggleAllTodo}\n            clearCompleted={clearCompleted}\n          />\n        </>\n      )}\n     {hasError && <ErrorComponent/>}\n    </div>\n  );\n}\n export default App\n","import React from \"react\";\nimport {render} from \"react-dom\"\nimport \"todomvc-app-css/index.css\";\nimport App from \"./components/App\";\n\n\nrender(<App/>,document.getElementById(\"root\"))\n"],"sourceRoot":""}