{"version":3,"sources":["components/TodoTextInput.js","services/socket-api.js","actions/index.js","constants/ActionTypes.js","components/Header.js","constants/TodoFilters.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","components/MainSection.js","components/App.js","reducers/index.js","reducers/todos.js","index.js"],"names":["TodoTextInput","Component","state","text","this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","render","className","classnames","edit","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","socket","openSocket","transports","BASE_URL","getTodos","dispatch","superagent","get","end","err","res","data","JSON","parse","Header","length","store","post","send","_id","Math","random","completed","set","emit","addTodo","FILTER_TITLES","Footer","visibilityFilter","activeCount","completedCount","setFilter","itemWord","Object","keys","map","filter","key","selected","style","cursor","onClick","delete","id","TodoItem","handleDoubleClick","handleSave","todo","deleteTodo","editTodo","handleDelete","handleCompleteTodo","completeTodo","element","checked","onDoubleClick","connect","put","TodoList","todos","useState","useEffect","on","todosCount","visibleTodos","t","Error","readOnly","App","rootReducer","combineReducers","action","createStore","reducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.6f70131f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classnames from \"classnames\";\n\nexport default class TodoTextInput extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  handleSubmit = e => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: \"\" });\n      }\n    }\n  };\n\n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classnames({\n          edit: this.props.editing,\n          \"new-todo\": this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import openSocket from 'socket.io-client'\n\nconst socket = openSocket('http://localhost:8000',{ transports: ['websocket', 'polling', 'flashsocket'] });\n\nexport default socket;\n\nexport function socket_init(){\n  console.log('connected to socket');\n}\n","import * as types from '../constants/ActionTypes'\nimport superagent from \"superagent\"\nimport socket from \"../services/socket-api\";\n\nconst BASE_URL = 'http://localhost:8000/api/'\n\nexport const getTodos = () => {\n  return dispatch => {\n    return superagent\n      .get(`${BASE_URL}`)\n      .end((err, res) => {\n        if (err) {\n          dispatch({type: types.GET_TODOS, data: []})\n        } else {\n          dispatch({type: types.GET_TODOS, data: JSON.parse(res.text)})\n        }\n      })\n  }\n}\n\nexport const addTodo = text => {\n  return dispatch => {\n    return superagent\n      .post(`${BASE_URL}todo`)\n      .send({_id: Math.random(), text: text, completed: false})\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        socket.emit(\"todo added\");\n        dispatch({\n          type: types.ADD_TODO, _id: Math.random(), text: text,\n          completed: false\n        })\n      })\n  }\n}\n\nexport const deleteTodo = ({_id}) => {\n  return dispatch => {\n    return superagent\n      .delete(`${BASE_URL}/todo/${_id}`)\n      .send({_id: _id})\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        dispatch({type: types.DELETE_TODO, _id})\n      })\n  }\n}\n\nexport const editTodo = (todo) => {\n  return dispatch => {\n    return superagent\n      .put(`${BASE_URL}/todo/${todo._id}`)\n      .send(todo)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        dispatch({type: types.EDIT_TODO, _id: todo._id, text: todo.text})\n      })\n  }\n}\n\nexport const completeTodo = (id, state) => {\n  return dispatch => {\n    return superagent\n      .put(`${BASE_URL}/todo/complete/${id}`)\n      .send({_id: id, completed: state})\n      .end((err, res) => dispatch({type: types.COMPLETE_TODO, _id: id, completed: state}))\n  }\n}\n\nexport const clearCompleted = () => {\n  return dispatch => {\n    return superagent\n      .delete(`${BASE_URL}/todo/complete/all`)\n      .send({id:123})\n      .end((err, res) => dispatch({type: types.CLEAR_COMPLETED}))\n  }\n}\n/*\nexport const clearCompleted = () => {\n  return dispatch => {\n    return superagent\n      .put(`${BASE_URL}/todo/clearcompleted`)\n      .end((err, res) => dispatch({type: types.CLEAR_COMPLETED}))\n  }\n}*/\n","export const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const GET_TODOS = 'GET_TODOS'\n","import React from 'react'\nimport TodoTextInput from './TodoTextInput'\nimport { addTodo } from '../actions'\nimport store from \"../index\";\n\nconst Header = () => {\n  const handleSave = text => {\n    if(text.length!==0) store.dispatch(addTodo(text));\n  }\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <TodoTextInput\n        newTodo\n        onSave={handleSave}\n        placeholder=\"What needs to be done?\"\n      />\n    </header>\n  )\n}\nexport default Header","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../constants/TodoFilters\";\nimport store from \"../index\";\nimport {clearCompleted} from \"../actions\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\"\n};\n\nconst Footer = ({\n  visibilityFilter,\n  activeCount,\n  completedCount,\n  setFilter,\n}) => {\n  const handleClearCompleted=()=>{\n    store.dispatch(clearCompleted());\n  }\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter => (\n          <li key={filter}>\n            {/* eslint-disable jsx-a11y/anchor-is-valid */}\n            <a\n              className={classnames({ selected: filter === visibilityFilter })}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => setFilter(filter)}\n            >\n              {FILTER_TITLES[filter]}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={handleClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\nimport { connect } from \"react-redux\";\nimport { completeTodo, deleteTodo, editTodo } from \"../actions\";\n\nclass TodoItem extends Component {\n\n  state = {\n    editing: false\n  };\n\n  handleDoubleClick = () => {\n    this.setState({editing: true});\n  };\n\n  handleSave = (text) => {\n    const {todo} = this.props\n    if (todo.text.length === 0) {\n      this.props.deleteTodo(todo.id);\n    } else {\n      this.props.editTodo({...todo, text: text});\n    }\n    this.setState({editing: false});\n  };\n  handleDelete = () => {\n    const {todo} = this.props\n    this.props.deleteTodo(todo);\n  }\n  handleCompleteTodo = () => {\n    const {todo} = this.props\n    this.props.completeTodo(todo._id, !todo.completed)\n  }\n\n  render() {\n    const {todo} = this.props;\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={this.handleSave}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={this.handleCompleteTodo}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={this.handleDelete}/>\n        </div>\n      );\n    }\n\n    return (\n      <li\n        key={classnames({id:todo._id})}\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n\nexport default connect(null, {editTodo, deleteTodo, completeTodo})(TodoItem);","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({todos}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo._id}\n        todo={todo}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { useEffect, useState } from \"react\";\nimport Footer from \"./Footer\";\nimport TodoList from \"./TodoList\";\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../constants/TodoFilters\";\nimport socket from \"../services/socket-api\"\nimport store from \"../index\";\nimport { getTodos } from \"../actions\"\nimport { connect } from \"react-redux\";\n\nconst MainSection = ({todos}) => {\n  const [visibilityFilter, setFilter] = useState(SHOW_ALL);\n  useEffect(() => {\n    store.dispatch(getTodos());\n    socket.on(\"Data changed\", () => {\n      store.dispatch(getTodos());\n    });\n  }, []);\n  const todosCount = todos.length;\n  const completedCount = todos.filter(({completed}) => completed).length;\n  let visibleTodos;\n  switch (visibilityFilter) {\n    case SHOW_ALL:\n      visibleTodos = todos;\n      break;\n    case SHOW_COMPLETED:\n      visibleTodos = todos.filter(t => t.completed);\n      break;\n    case SHOW_ACTIVE:\n      visibleTodos = todos.filter(t => !t.completed);\n      break;\n    default:\n      throw new Error(\"Unknown filter: \" + visibilityFilter);\n  }\n\n  return (\n    <section className=\"main\">\n      {!!todosCount && (\n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n        </span>\n      )}\n      <TodoList\n        todos={visibleTodos}\n      />\n      {!!todosCount && (\n        <Footer\n          visibilityFilter={visibilityFilter}\n          setFilter={setFilter}\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n        />\n      )}\n    </section>\n  );\n};\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nexport default connect(mapStateToProps)(MainSection);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport MainSection from \"./MainSection\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header/>\n      <MainSection/>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n  todos\n})\n\nexport default rootReducer\n","import { ADD_TODO, CLEAR_COMPLETED, COMPLETE_TODO, DELETE_TODO, EDIT_TODO, GET_TODOS } from '../constants/ActionTypes'\n\nexport default function todos(state = [], action) {\n  switch (action.type) {\n\n    case GET_TODOS:\n      return [...action.data]\n\n    case ADD_TODO:\n      return [\n        {\n          _id: action._id,\n          completed: action.completed,\n          text: action.text\n        },\n        ...state\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo._id !== action._id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo._id === action._id ?\n          {...todo, text: action.text} :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo._id === action._id ?\n          {...todo, completed: action.completed} :\n          todo\n      )\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\nimport 'todomvc-app-css/index.css'\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;\n\nrender(<Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}