{"version":3,"sources":["components/TodoTextInput.js","components/Header.js","constants/TodoFilters.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","services/socket-api.js","components/MainSection.js","actions/index.js","constants/ActionTypes.js","components/App.js","reducers/todos.js","reducers/index.js","index.js"],"names":["TodoTextInput","Component","state","text","this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","render","className","classnames","edit","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Header","addTodo","length","FILTER_TITLES","Footer","visibilityFilter","activeCount","completedCount","setFilter","clearCompleted","itemWord","Object","keys","map","filter","key","selected","style","cursor","onClick","TodoItem","handleDoubleClick","handleSave","todo","deleteTodo","id","editTodo","completeTodo","element","checked","completed","_id","onDoubleClick","TodoList","todos","socket","openSocket","transports","MainSection","actions","completeAll","getTodos","useState","useEffect","on","console","log","todosCount","visibleTodos","t","Error","readOnly","BASE_URL","dispatch","superagent","get","end","err","res","data","JSON","parse","post","send","Math","random","emit","delete","put","ids","promises","Promise","resolve","reject","all","then","results","connect","bindActionCreators","TodoActions","initialState","rootReducer","combineReducers","action","areAllMarked","every","store","createStore","reducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.3fb38d5f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classnames from \"classnames\";\n\nexport default class TodoTextInput extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  handleSubmit = e => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: \"\" });\n      }\n    }\n  };\n\n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classnames({\n          edit: this.props.editing,\n          \"new-todo\": this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import React from 'react'\nimport TodoTextInput from './TodoTextInput'\n\nconst Header = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={(text) => {\n        if (text.length !== 0) {\n          addTodo(text)\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n)\n\nexport default Header","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../constants/TodoFilters\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\"\n};\n\nconst Footer = ({\n  visibilityFilter,\n  activeCount,\n  completedCount,\n  setFilter,\n  clearCompleted\n}) => {\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter => (\n          <li key={filter}>\n            {/* eslint-disable jsx-a11y/anchor-is-valid */}\n            <a\n              className={classnames({ selected: filter === visibilityFilter })}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => setFilter(filter)}\n            >\n              {FILTER_TITLES[filter]}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={clearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  visibilityFilter: PropTypes.string.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nexport default class TodoItem extends Component {\n\n  state = {\n    editing: false\n  };\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true });\n  };\n\n  handleSave = (todo) => {\n    if (todo.text.length === 0) {\n      this.props.deleteTodo(todo.id);\n    } else {\n      this.props.editTodo(todo);\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={text => this.handleSave({...todo,text:text})}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo._id, !todo.completed)}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo)} />\n        </div>\n      );\n    }\n\n    return (\n      <li\n        key={classnames({id:todo._id})}\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ todos, editTodo, deleteTodo, completeTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo._id}\n        todo={todo}\n        editTodo={editTodo}\n        completeTodo={completeTodo}\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import openSocket from 'socket.io-client'\n\nconst socket = openSocket('http://localhost:8000',{ transports: ['websocket', 'polling', 'flashsocket'] });\n\nexport default socket;\n\nexport function socket_init(){\n  console.log('connected to socket');\n}\n","import React, { useEffect, useState } from \"react\";\nimport Footer from \"./Footer\";\nimport TodoList from \"./TodoList\";\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../constants/TodoFilters\";\nimport socket from \"../services/socket-api\"\nconst MainSection = ({\n                       todos,\n                       actions: {clearCompleted, completeAll, completeTodo, deleteTodo, editTodo, getTodos}\n                     }) => {\n  const [visibilityFilter, setFilter] = useState(SHOW_ALL);\n  useEffect(() => {\n    getTodos();\n    socket.on(\"Data\", () => {\n      console.log(\"OK\");\n      getTodos();\n    });\n  }, []);\n  const todosCount = todos.length;\n  const completedCount = todos.filter(({completed}) => completed).length;\n  let visibleTodos;\n  switch (visibilityFilter) {\n    case SHOW_ALL:\n      visibleTodos = todos;\n      break;\n    case SHOW_COMPLETED:\n      visibleTodos = todos.filter(t => t.completed);\n      break;\n    case SHOW_ACTIVE:\n      visibleTodos = todos.filter(t => !t.completed);\n      break;\n    default:\n      throw new Error(\"Unknown filter: \" + visibilityFilter);\n  }\n\n  return (\n    <section className=\"main\">\n      {!!todosCount && (\n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          {<label onClick={() => completeAll(todos.filter(e => !e.completed).map(e => e._id))}/>}\n        </span>\n      )}\n      <TodoList\n        todos={visibleTodos}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        completeTodo={completeTodo}\n      />\n      {!!todosCount && (\n        <Footer\n          visibilityFilter={visibilityFilter}\n          setFilter={setFilter}\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          clearCompleted={clearCompleted}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default MainSection;\n","import * as types from '../constants/ActionTypes'\nimport superagent from \"superagent\"\nimport socket from \"../services/socket-api\";\n\nconst BASE_URL = 'http://localhost:8000/api/'\n\nexport const getTodos = () => {\n  return dispatch => {\n    return superagent\n      .get(`${BASE_URL}`)\n      .end((err, res) => {\n        if (err){\n          dispatch({type: types.GET_TODOS, data: []})}\n        else {\n          dispatch({type: types.GET_TODOS, data: JSON.parse(res.text)})\n        }})\n  }\n}\n\nexport const addTodo = text => {\n  return dispatch => {\n    return superagent\n      .post(`${BASE_URL}todo`)\n      .send({_id: Math.random(), text: text, completed: false})\n      .end((err, res) =>{socket.emit(\"Data changed\"); dispatch({type: types.ADD_TODO, _id: Math.random(), text: text, completed: false})})\n  }\n}\n\nexport const deleteTodo = ({_id}) => {\n  return dispatch => {\n    return superagent\n      .delete(`${BASE_URL}/todo/${_id}`)\n      .send({_id:_id})\n      .end((err, res) => dispatch({type: types.DELETE_TODO, _id}))\n  }\n}\n\nexport const editTodo = (todo) => {\n  return dispatch => {\n    return superagent\n      .put(`${BASE_URL}/todo/${todo._id}`)\n      .send(todo)\n      .end((err, res) => dispatch({type: types.EDIT_TODO, _id: todo._id, text: todo.text}))\n  }\n}\n\nexport const completeTodo = (id, state) => {\n  return dispatch => {\n    return superagent\n      .put(`${BASE_URL}/todo/complete/${id}`)\n      .send({completed: state})\n      .end((err, res) => dispatch({type: types.COMPLETE_TODO, _id: id, completed: state}))\n  }\n}\n\nexport const completeAll = ids => {\n  return dispatch => {\n    var promises = ids.map(id => {\n      return new Promise((resolve, reject) => {\n        superagent\n          .put(`${BASE_URL}/todo/completeAll`)\n          .send({completed: true})\n          .end((err, res) => resolve())\n      })\n    })\n    Promise.all(promises).then(results => dispatch(({type: types.COMPLETE_ALL})))\n  }\n}\n\nexport const clearCompleted = ids => {\n  return dispatch => {\n    var promises = ids.map(id => {\n      return new Promise((resolve, reject) => {\n        superagent\n          .delete(`${BASE_URL}/todo/clearcompleted/${id}`)\n          .end((err, res) => resolve())\n      })\n    })\n    Promise.all(promises).then(results => dispatch(({type: types.CLEAR_COMPLETED})))\n  }\n}\n","export const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL = 'COMPLETE_ALL'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\n// New action type\nexport const GET_TODOS = 'GET_TODOS'\n","import React from \"react\";\nimport Header from \"./Header\";\nimport MainSection from \"./MainSection\";\nimport { bindActionCreators } from \"redux\";\nimport {connect} from \"react-redux\";\nimport * as TodoActions from \"../actions\"\n\n\nconst App = ({todos,actions}) => {\n  return (\n    <div>\n      <Header addTodo={actions.addTodo}/>\n      <MainSection\n        todos={todos}\n        actions={actions}\n      />\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nconst mapDispatchToProps = dispatch =>({\n  actions: bindActionCreators(TodoActions,dispatch)\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","// Add new GET_TODOS constant\nimport { ADD_TODO, DELETE_TODO, EDIT_TODO, COMPLETE_TODO, COMPLETE_ALL, CLEAR_COMPLETED, GET_TODOS } from '../constants/ActionTypes'\n\n// Initial state is not needed anymore\nconst initialState = [\n  // {\n  //   text: 'Use Redux',\n  //   completed: false,\n  //   id: 0\n  // }\n]\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    // Now as todo data is stored to server, we need to update whole state\n    case GET_TODOS:\n      return [ ...action.data ]\n\n    case ADD_TODO:\n      return [\n        {\n          // Id will come with action payload\n          // id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n          _id: action._id,\n          completed: action.completed,\n          text: action.text\n        },\n        ...state\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo._id !== action._id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo._id === action._id ?\n          { ...todo, text: action.text } :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo._id === action._id ?\n          // No more toggling, completed state comes with action payload\n          // { ...todo, completed: !todo.completed } :\n          { ...todo, completed: action.completed } :          \n          todo\n      )\n\n    case COMPLETE_ALL:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nconst rootReducer = combineReducers({\n  todos\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\nimport 'todomvc-app-css/index.css'\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nrender(<Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}