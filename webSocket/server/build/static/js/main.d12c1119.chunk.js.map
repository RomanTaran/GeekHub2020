{"version":3,"sources":["components/TodoTextInput.js","reducers/todosSlice.js","components/Header.js","constants/TodoFilters.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","services/socket-api.js","components/GlobalError.js","components/MainSection.js","components/App.js","reducers/index.js","index.js"],"names":["TodoTextInput","Component","state","text","this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","render","className","classnames","edit","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","BASE_URL","getTodos","createAsyncThunk","a","axios","get","response","data","addTodo","rejectWithValue","post","id","Math","random","completed","deleteTodo","editTodo","todo","put","completeTodo","todoReducer","createSlice","name","initialState","todos","error","reducers","resetError","extraReducers","fulfilled","action","payload","push","rejected","filter","item","map","actions","Header","React","handleSave","length","store","dispatch","FILTER_TITLES","Footer","visibilityFilter","activeCount","setFilter","itemWord","Object","keys","key","selected","style","cursor","onClick","TodoItem","handleDoubleClick","handleDelete","handleCompleteTodo","element","checked","onDoubleClick","connect","TodoList","socket","openSocket","transports","GlobalError","handleResetError","position","top","left","fontSize","transform","padding","backgroundColor","boxShadow","display","alignItems","useDispatch","useState","useEffect","on","todosCount","completedCount","visibleTodos","t","Error","readOnly","App","rootReducer","combineReducers","reducer","configureStore","middleware","getDefaultMiddleware","document","getElementById"],"mappings":"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","file":"static/js/main.d12c1119.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classnames from \"classnames\";\n\nexport default class TodoTextInput extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  handleSubmit = e => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: \"\" });\n      }\n    }\n  };\n\n  handleChange = e => {\n    this.setState({text: e.target.value});\n  };\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classnames({\n          edit: this.props.editing,\n          \"new-todo\": this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst BASE_URL = 'http://localhost:8000/api/'\n\nexport const getTodos = createAsyncThunk(\"GET_TODOS\", async () => {\n    const response = await axios.get(`${BASE_URL}`);\n    return response.data;\n })\n\nexport const addTodo = createAsyncThunk(\"ADD_TODO\", async (text, {rejectWithValue}) => {\n  try {\n    const response = await axios.post(`${BASE_URL}todo`, {id: Math.random(), text: text, completed: false})\n    return {id: Math.random(), text: text, completed: false};\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n})\n\nexport const deleteTodo = createAsyncThunk(\"DELETE_TODO\", async ({id}, {rejectWithValue}) => {\n  try {\n    const response = await axios.post(`${BASE_URL}todo/${id}`, {id});\n    return id;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n});\n\nexport const editTodo = createAsyncThunk(\"EDIT_TODO\", async (todo, {rejectWithValue}) => {\n  try {\n    const response = await axios.put(`${BASE_URL}todo/${todo.id}`, {...todo});\n    return {id: todo.id, text: todo.text};\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n})\n\nexport const completeTodo = createAsyncThunk(\"COMPLETE_TODO\", async (id, {rejectWithValue}) => {\n  try {\n    const response = await axios.put(`${BASE_URL}todo/complete/${id}`, {id});\n    return id;\n  } catch (err) {\n    return rejectWithValue(err.response.data);\n  }\n\n})\n\nexport const todoReducer = createSlice({\n  name: \"todos\",\n  initialState: {\n    todos: [],\n    error: null\n  },\n  reducers: {\n    resetError(state) {\n      state.error = '';\n    }\n  },\n  extraReducers: {\n    [getTodos.fulfilled]: (state, action) => {\n      state.todos = action.payload\n    },\n    [addTodo.fulfilled]: (state, action) => {\n      state.todos.push(action.payload)\n    },\n    [addTodo.rejected]: (state, action) => {\n      if (!action.payload) {\n        state.error = \"Error in connection with server. Check your internet connection\"\n      } else {\n        state.error = action.payload;\n      }\n    },\n    [deleteTodo.fulfilled]: (state, action) => {\n      state.todos = state.todos.filter((item) => item.id !== action.payload);\n    },\n    [deleteTodo.rejected]: (state, action) => {\n      if (!action.payload) {\n        state.error = \"Error in connection with server. Check your internet connection\"\n      } else {\n        state.error = action.payload;\n      }\n    },\n    [editTodo.fulfilled]: (state, action) => {\n      const {id, text} = action.payload;\n      state.todos = state.todos.map((item) => {\n        return item.id === id ? {...item, text} : item;\n      });\n    },\n    [editTodo.rejected]: (state, action) => {\n      if (!action.payload) {\n        state.error = \"Error in connection with server. Check your internet connection\"\n      } else {\n        state.error = action.payload;\n      }\n    },\n    [completeTodo.fulfilled]: (state, action) => {\n      state.todos = state.todos.map((item) => {\n        const completed = item.completed !== true;\n        return item.id === action.payload ? {...item, completed: completed} : item;\n      });\n    },\n    [completeTodo.rejected]: (state, action) => {\n      if (!action.payload) {\n        state.error = \"Error in connection with server. Check your internet connection\"\n      } else {\n        state.error = action.payload;\n      }\n    },\n  }\n})\n\nexport const {resetError} = todoReducer.actions","import React from 'react'\nimport TodoTextInput from './TodoTextInput'\nimport { addTodo } from '../reducers/todosSlice'\nimport store from \"../index\";\n\nclass Header extends React.Component {\n  handleSave = text => {\n    if (text.length !== 0) store.dispatch(addTodo(text));\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoTextInput\n          newTodo\n          onSave={this.handleSave}\n          placeholder=\"What needs to be done?\"\n        />\n      </header>\n    )\n  }\n}\n\nexport default Header","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../constants/TodoFilters\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\"\n};\n\nconst Footer = ({\n  visibilityFilter,\n  activeCount,\n  setFilter,\n}) => {\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter => (\n          <li key={filter}>\n            <a\n              className={classnames({ selected: filter === visibilityFilter })}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => setFilter(filter)}\n            >\n              {FILTER_TITLES[filter]}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\nimport { connect } from \"react-redux\";\nimport { completeTodo, deleteTodo, editTodo } from \"../reducers/todosSlice\";\n\nclass TodoItem extends Component {\n\n  state = {\n    editing: false\n  };\n\n  handleDoubleClick = () => {\n    this.setState({editing: true});\n  };\n\n  handleSave = (text) => {\n    const {todo} = this.props\n    if (todo.text.length === 0) {\n      this.props.deleteTodo(todo);\n    } else {\n      this.props.editTodo({...todo, text: text});\n    }\n    this.setState({editing: false});\n  };\n  handleDelete = () => {\n    const {todo} = this.props\n    this.props.deleteTodo(todo);\n  }\n  handleCompleteTodo = () => {\n    const {todo} = this.props\n    this.props.completeTodo(todo.id)\n  }\n\n  render() {\n    const {todo} = this.props;\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={this.handleSave}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={this.handleCompleteTodo}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={this.handleDelete}/>\n        </div>\n      );\n    }\n\n    return (\n      <li\n        key={classnames({id:todo.id})}\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n\nexport default connect(null, {editTodo, deleteTodo, completeTodo})(TodoItem);","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({todos}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import openSocket from 'socket.io-client'\n\nconst socket = openSocket('http://localhost:8000',{ transports: ['websocket', 'polling', 'flashsocket'] });\n\nexport default socket;\n\nexport function socket_init(){\n  console.log('connected to socket');\n}\n","import React from 'react'\nimport { connect } from \"react-redux\";\nimport {resetError} from \"../reducers/todosSlice\"\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass GlobalError extends React.Component {\n  handleResetError = ()=>{\n    this.props.resetError();\n  }\n\n  render() {\n    if (!this.props.error) return null\n\n    return (\n      <div\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: '50%',\n          fontSize: 20,\n          transform: 'translateX(-50%)',\n          padding: 10,\n          backgroundColor: '#ffcccc',\n          boxShadow: '0 3px 25px -10px rgba(0,0,0,0.5)',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        {this.props.error}\n        &nbsp;\n        <CloseIcon\n          className=\"material-icons\"\n          style={{cursor: 'pointer'}}\n          onClick={this.handleResetError}\n        >\n          close\n        </CloseIcon>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state =>state.todoReducer;\n\nexport default connect(mapStateToProps,{resetError})(GlobalError);","import React, { useEffect, useState } from \"react\";\nimport Footer from \"./Footer\";\nimport TodoList from \"./TodoList\";\nimport { SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED } from \"../constants/TodoFilters\";\nimport { getTodos } from \"../reducers/todosSlice\"\nimport { connect, useDispatch } from \"react-redux\";\nimport socket from \"../services/socket-api\";\nimport GlobalError from \"./GlobalError\";\n\nconst MainSection = ({todos}) => {\n  const dispatch = useDispatch();\n  const [visibilityFilter, setFilter] = useState(SHOW_ALL);\n  useEffect(() => {\n    socket.on(\"Change\",()=>{\n      dispatch(getTodos())});\n   }, [dispatch]);\n  const todosCount = todos.length;\n  const completedCount = todos.filter(({completed}) => completed).length;\n  let visibleTodos;\n  switch (visibilityFilter) {\n    case SHOW_ALL:\n      visibleTodos = todos;\n      break;\n    case SHOW_COMPLETED:\n      visibleTodos = todos.filter(t => t.completed);\n      break;\n    case SHOW_ACTIVE:\n      visibleTodos = todos.filter(t => !t.completed);\n      break;\n    default:\n      throw new Error(\"Unknown filter: \" + visibilityFilter);\n  }\n  return (\n    <section className=\"main\">\n      {!!todosCount && (\n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n        </span>\n      )}\n      <GlobalError/>\n      <TodoList\n        todos={visibleTodos}\n      />\n      {!!todosCount && (\n        <Footer\n          visibilityFilter={visibilityFilter}\n          setFilter={setFilter}\n          activeCount={todosCount - completedCount}\n        />\n      )}\n    </section>\n  );\n};\nconst mapStateToProps = state =>state.todoReducer;\n\nexport default connect(mapStateToProps)(MainSection);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport MainSection from \"./MainSection\";\nimport GlobalError from \"./GlobalError\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header/>\n      <MainSection/>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux'\nimport { todoReducer } from \"./todosSlice\";\n\nconst rootReducer = combineReducers({\n  todoReducer: todoReducer.reducer\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\nimport 'todomvc-app-css/index.css'\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({reducer, middleware: [...getDefaultMiddleware()]});\nexport default store;\n\nrender(<Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}